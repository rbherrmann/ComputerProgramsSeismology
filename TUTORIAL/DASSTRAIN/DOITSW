# !/bin/sh

#####
#   clean up
#####
rm -f out

#####
#   this is a part of tutorial on how to model axial strain
#   that would be appropriate DAS measurements
#####

#####
#    define the epicenter and source mechanism
#    For convenience some of the variables will have
#    Sac/gsac names
#
EVLA=40.378
EVLO=0.742
#
#    Event parameters from Villaseno et al 2020.
#    01 OCT 2013 03:32:44
#
STK=40
DIP=55
RAKE=-5
MW=4.08
HS=7.0
#####

#####
#    Place the receiver just beneath the water layer. This
#    requires knowledge of this boundary from the 
#####
HR=0.041

#####
#    define the local locked mode model
#####
cat > lmMODT.mod << EOF
MODEL.01
lmMODT.mod
ISOTROPIC
KGS
FLAT EARTH
1-D
CONSTANT VELOCITY
LINE08
LINE09
LINE10
LINE11
  H(KM) VP(KM/S) VS(KM/S) RHO(GM/CC)   QP   QS  ETAP  ETAS  FREFP  FREFS
  0.0400  1.5000  0.0000  1.0000     0.00     0.00 0.00 0.00 1.00 1.00
  0.0778  1.6416  0.3857  1.7217    60.00    30.00 0.00 0.00 1.00 1.00
  0.1111  2.0115  0.6400  1.9105    60.00    30.00 0.00 0.00 1.00 1.00
  0.2444  2.3340  0.8945  2.0383     0.00     0.00 0.00 0.00 1.00 1.00
  0.0222  2.4350  0.9800  2.0725     0.00     0.00 0.00 0.00 1.00 1.00
  0.4444  2.7255  1.2370  2.1578     0.00     0.00 0.00 0.00 1.00 1.00
  0.0444  2.8609  1.3600  2.1920     0.00     0.00 0.00 0.00 1.00 1.00
  0.3556  3.0233  1.5075  2.2289     0.00     0.00 0.00 0.00 1.00 1.00
  0.1778  3.2617  1.7200  2.2766     0.00     0.00 0.00 0.00 1.00 1.00
  0.2444  3.3306  1.7800  2.2892     0.00     0.00 0.00 0.00 1.00 1.00
  0.6444  3.4405  1.8738  2.3084     0.00     0.00 0.00 0.00 1.00 1.00
 40.0     6.      3.5     2.8        0 0 0 0 1 1
 40.0    14.      7.0     2.8        0 0 0 0 1 1
EOF

#####
#    station list that will be used to define
#    local triplets
#    Station_name Latitude Longitude
#    STA STLA STLO 
#####
cat > slist << EOF
C0050 40.5368 0.462457 
C0100 40.5215 0.509015 
C0150 40.5483 0.42601 
C0200 40.5459 0.430559 
C0250 40.5452 0.43635 
C0300 40.5441 0.441799 
C0350 40.542 0.446821 
C0400 40.5411 0.452162 
C0450 40.5387 0.457136 
C0500 40.5368 0.462457 
C0550 40.5355 0.468117 
C0600 40.5339 0.473526 
C0650 40.5311 0.47784 
C0700 40.531 0.48327 
C0750 40.5287 0.488182 
C0800 40.5278 0.493946 
C0850 40.5271 0.499408 
C0900 40.5252 0.504553 
C1000 40.5215 0.509015 
C1050 40.5189 0.513535 
C1100 40.5161 0.518105 
C1150 40.5132 0.522673 
C1200 40.5104 0.527241 
C1250 40.5075 0.531808 
C1300 40.5047 0.536376 
C1350 40.5018 0.540944 
C1400 40.499 0.545511 
C1450 40.4961 0.550079 
C1500 40.4932 0.554647 
C1550 40.4904 0.559214 
C1600 40.4875 0.563782 
C1650 40.4847 0.56835 
C1700 40.4818 0.572917 
C1750 40.479 0.577485 
C1800 40.4761 0.582053 
C1850 40.4733 0.58662 
C1900 40.4704 0.591188 
C1950 40.4676 0.595756 
C2000 40.4647 0.600323 
C2050 40.4618 0.604891 
C2100 40.459 0.609459 
C2150 40.4561 0.614026 
C2200 40.4533 0.618594 
C2250 40.4504 0.623161 
C2300 40.4476 0.627729 
C2350 40.4447 0.632297 
C2400 40.4419 0.636864 
C2450 40.439 0.641432 
C2500 40.4362 0.646 
C2550 40.4333 0.650567 
C2600 40.4304 0.655135 
C2650 40.4276 0.659703 
C2700 40.4247 0.66427 
C2750 40.4219 0.668838 
C2800 40.419 0.673406 
C2850 40.4162 0.677973 
C2900 40.4133 0.682541 
C2950 40.4105 0.687109 
C3000 40.4076 0.691676 
C3050 40.4048 0.696244 
C3100 40.4019 0.700812 
C3150 40.399 0.705379 
C3200 40.396 0.709582 
EOF

#####
#   define positions of DAS sites
#   note we will need to define the local orientation
#   Thus this table gives the coordinates of 3 stations
#   We will compute the synthetics to the second
#   and use the first and third to get the spatial
#   orientation of the DAS
#   stalist is created by a simple C program 
#   that reads in triplets from above
#
#   The output format is
#   STA1 LAT1 LON1 STA2 LAT2 LON2 STA3 LAT3 LON3
#####
cat > dumb.c << EOF
#include <stdio.h>

#define MAXSTR 8
int main(void)
{
	char stnm1[MAXSTR];
	float stla1, stlo1;
	char stnm2[MAXSTR];
	float stla2, stlo2;
	char stnm3[MAXSTR];
	float stla3, stlo3;
	while((scanf("%s %f %f",stnm1,&stla1,&stlo1) != EOF) &&
	      (scanf("%s %f %f",stnm2,&stla2,&stlo2) != EOF) &&
	      (scanf("%s %f %f",stnm3,&stla3,&stlo3) != EOF) != 0 ){
		printf("%s %f %f %s %f %f %s %f %f\n",
			stnm1,stla1,stlo1,stnm2,stla2,stlo2,stnm3,stla3,stlo3);
	}
	return 0;
}
EOF
gcc dumb.c
a.out < slist > swstalist
rm -f a.out dumb.c

#####
#    Now focus on the center station but assume that the three stations 
#    define a line. The first and third are then used to define the
#    local orientation of the DAS using the CPS program udelax
#####
rm -f swstaaz
while read STNM1 STLA1 STLO1 STNM2 STLA2 STLO2 STNM3 STLA3 STLO3

do
	AZ=`udelaz -AZ -EVLA $STLA1 -EVLO $STLO1 -STLA $STLA3 -STLO $STLO3`
	echo $STNM2 $STLA2 $STLO2 $AZ >> swstaaz
done < swstalist

#####
#    The swstaaz  has entries
#    Station_Name Station_Latitude Station_Longitude Local_Das=_Orientation
#
#    Now lets make synthetics. We will process each station
#    individually an place the Green's functions into a directory
#    with the name SWDIR_Station_Name
#####

#####
#    crweatew prototype dfile to computye the eigenfunctions
#    this will be used once for speed. The eigenfunction 
#    comptuation does not require distance
#####
NPTS=512
DT=0.05 
cat > dfile << EOF
100.0 ${DT} ${NPTS} 0 0
EOF
	sprep96 -M lmMODT.mod -d dfile  -HS ${HS} -HR ${HR} -R -L -NMOD 2000
	sdisp96
	sregn96
	slegn96

while read STNM STLA STLO AZDAS
do
	# create a unique directory based on the station name
	rm -fr SWDIR_${STNM}
	mkdir SWDIR_${STNM}
	# compute the distance, and azimuth from the epicenter to the station
	DIST=`udelaz -DIST -EVLA $EVLA -EVLO $EVLO -STLA $STLA -STLO $STLO`
	AZ=`udelaz -AZ -EVLA $EVLA -EVLO $EVLO -STLA $STLA -STLO $STLO`
echo $STNM $STLA $STLO $AZDAS $DIST $AZ >> out
	# create the dfile for the synthetics
	cat > dfile << EOF
$DIST ${DT} ${NPTS} 0 0
EOF
	# make the synthetics using th4e lmMODT.mod defined above
	# with the source and the

	spulse96strain -2 -d dfile -V -p -l 2 -STRAIN -DIP $DIP -STK $STK -RAKE $RAKE -MW $MW -AZ $AZ 
set +x
	# save everything in the directory for the station
	mv *.U[zrt] *.E?? *.Del SWDIR_${STNM}

#	Change to the  WKDIR_${STNM} directory in a sub-shell, and rotate to a 
#       coordinate system such that the x axis is in the direction of the DAS 
#	line, e.g. to DASAZ. The transformation is
#               | u_x |   | cos theta   - sin theta   0 | | u_r |
#               | u_y | = | sin theta     cos theta   0 | | u_f |
#               | u_z |   |    0              0       1 | | u_z |
#    
#	Here theta = mod(BAZ+180-DASAZ),360)
	( cd SWDIR_${STNM}

	# in case there is more than one Green's function here
#####
#    put in station and epicentger coordinates
#####
gsac << EOF
rh *.U[zrt] *.E?? *.Del
ch STLA $STLA STLO $STLO EVLA $EVLA EVLO $EVLO EVDP $HS
ch KSTNM $STNM
ch LCALDA TRUE
wh
q       
EOF
	for i in *.Uz
	do
		BAZ=`saclhdr -BAZ $i`
		PROTO=`basename $i .Uz`
		THETA=`echo $AZDAS $BAZ | awk '{print ($2 + 180 - $1)%360 }'`
		srotate96 -AZ $THETA -U -FILE $PROTO
		srotate96 -AZ $THETA -STRAIN -FILE $PROTO
	done
	)
done < swstaaz


#####
#   make a map
#####
gsac << EOF
rh  SWDIR*/*Uz
map5 ep on sta on kstnm on
q
EOF

sh ./map5.sh
mv map5.eps SWmap.eps
EPSTOPNG SWmap.eps



rm -fr dfile *egn sdisp*
